(ns codes.clj.docs.frontend.test.aux.fixtures.namespaces)

(def namespaces
  {:namespaces [{:artifact "clojure",
                 :author "Jason Sankey",
                 :col 1,
                 :doc "clojure.test extension for JUnit-compatible XML output.\n\n  JUnit (http://junit.org/) is the most popular unit-testing library\n  for Java.  As such, tool support for JUnit output formats is\n  common.  By producing compatible output from tests, this tool\n  support can be exploited.\n\n  To use, wrap any calls to clojure.test/run-tests in the\n  with-junit-output macro, like this:\n\n    (use 'clojure.test)\n    (use 'clojure.test.junit)\n\n    (with-junit-output\n      (run-tests 'my.cool.library))\n\n  To write the output to a file, rebind clojure.test/*test-out* to\n  your own PrintWriter (perhaps opened using\n  clojure.java.io/writer).",
                 :end-col 35,
                 :end-row 39,
                 :filename "/src/clj/clojure/test/junit.clj",
                 :git-source "https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/test/junit.clj#L17",
                 :group "org.clojure",
                 :id "org.clojure/clojure/clojure.test.junit",
                 :meta {},
                 :name "clojure.test.junit",
                 :name-col 3,
                 :name-end-col 21,
                 :name-end-row 37,
                 :name-row 37,
                 :project-id "org.clojure/clojure",
                 :row 17}
                {:artifact "clojure",
                 :author "Rich Hickey",
                 :col 1,
                 :doc "XML reading/writing.",
                 :end-col 60,
                 :end-row 13,
                 :filename "/src/clj/clojure/xml.clj",
                 :git-source "https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/xml.clj#L9",
                 :group "org.clojure",
                 :id "org.clojure/clojure/clojure.xml",
                 :meta {},
                 :name "clojure.xml",
                 :name-col 3,
                 :name-end-col 14,
                 :name-end-row 11,
                 :name-row 11,
                 :project-id "org.clojure/clojure",
                 :row 9}
                {:artifact "clojure",
                 :author "Rich Hickey",
                 :col 1,
                 :doc "Functional hierarchical zipper, with navigation, editing,\n  and enumeration.  See Huet",
                 :end-col 51,
                 :end-row 16,
                 :filename "/src/clj/clojure/zip.clj",
                 :git-source "https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/zip.clj#L12",
                 :group "org.clojure",
                 :id "org.clojure/clojure/clojure.zip",
                 :meta {},
                 :name "clojure.zip",
                 :name-col 3,
                 :name-end-col 14,
                 :name-end-row 15,
                 :name-row 15,
                 :project-id "org.clojure/clojure",
                 :row 12}],
   :project {:artifact "clojure",
             :group "org.clojure",
             :id "org.clojure/clojure",
             :manifest :pom,
             :name "org.clojure/clojure",
             :paths ["/src/clj"
                     "/src/main/clojure"
                     "/src/main/java"
                     "/src/resources"],
             :sha "ce55092f2b2f5481d25cff6205470c1335760ef6",
             :tag "clojure-1.11.1",
             :url "https://github.com/clojure/clojure"}})
