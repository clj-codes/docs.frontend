(ns codes.clj.docs.frontend.test.aux.fixtures.definition)

(def definition
  {:definition {:added "1.10",
                :arglist-strs ["[in-reader out-fn & {:keys [stdin]}]"],
                :artifact "clojure",
                :col 1,
                :defined-by "clojure.core/defn",
                :doc "a REPL with structured output (for programs)\n  reads forms to eval from in-reader (a LineNumberingPushbackReader)\n  Closing the input or passing the form :repl/quit will cause it to return\n\n  Calls out-fn with data, one of:\n  {:tag :ret\n   :val val ;;eval result, or Throwable->map data if exception thrown\n   :ns ns-name-string\n   :ms long ;;eval time in milliseconds\n   :form string ;;iff successfully read\n   :exception true ;;iff exception thrown\n  }\n  {:tag :out\n   :val string} ;chars from during-eval *out*\n  {:tag :err\n   :val string} ;chars from during-eval *err*\n  {:tag :tap\n   :val val} ;values from tap>\n\n  You might get more than one :out or :err per eval, but exactly one :ret\n  tap output can happen at any time (i.e. between evals)\n  If during eval an attempt is made to read *in* it will read from in-reader unless :stdin is supplied\n\n  Alpha, subject to change.",
                :end-col 36,
                :end-row 261,
                :filename "/src/clj/clojure/core/server.clj",
                :git-source "https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/core/server.clj#L191",
                :group "org.clojure",
                :id "org.clojure/clojure/clojure.core.server/prepl/0",
                :meta {},
                :name "prepl",
                :name-col 7,
                :name-end-col 12,
                :name-end-row 191,
                :name-row 191,
                :namespace-id "org.clojure/clojure/clojure.core.server",
                :private false,
                :row 191,
                :varargs-min-arity 2},
   :namespace {:artifact "clojure",
               :author "Alex Miller",
               :col 1,
               :doc "Socket server support",
               :end-col 48,
               :end-row 19,
               :filename "/src/clj/clojure/core/server.clj",
               :git-source "https://github.com/clojure/clojure/blob/clojure-1.11.1/src/clj/clojure/core/server.clj#L9",
               :group "org.clojure",
               :id "org.clojure/clojure/clojure.core.server",
               :meta {},
               :name "clojure.core.server",
               :name-col 3,
               :name-end-col 22,
               :name-end-row 11,
               :name-row 11,
               :project-id "org.clojure/clojure",
               :row 9},
   :project {:artifact "clojure",
             :group "org.clojure",
             :id "org.clojure/clojure",
             :manifest :pom,
             :name "org.clojure/clojure",
             :paths ["/src/clj"
                     "/src/main/clojure"
                     "/src/main/java"
                     "/src/resources"],
             :sha "ce55092f2b2f5481d25cff6205470c1335760ef6",
             :tag "clojure-1.11.1",
             :url "https://github.com/clojure/clojure"}})
