name: Deploy

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  tests-karma:
    strategy:
      matrix:
        os-version: [ubuntu-latest]
        node-version: [18.x]
    runs-on: ${{ matrix.os-version }}

    steps:
    - name: Clone Repo
      uses: actions/checkout@v4.1.1

    - name: Prepare java
      uses: actions/setup-java@v4
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Install clojure cli
      uses: DeLaGuardo/setup-clojure@master
      with:
        cli: 1.11.1.1435

    - name: Karma Tests ${{ matrix.node-version }}
      uses: actions/setup-node@v4.0.2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: |
        npm ci
        npm run test

  build_web:
    strategy:
      matrix:
        os-version: [ubuntu-latest]
        node-version: [18.x]
    runs-on: ${{ matrix.os-version }}

    steps:
    - name: Clone Repo
      uses: actions/checkout@v4.1.1

    - name: Prepare java
      uses: actions/setup-java@v4
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Install clojure cli
      uses: DeLaGuardo/setup-clojure@master
      with:
        cli: 1.11.1.1435

    - name: Karma Tests ${{ matrix.node-version }}
      uses: actions/setup-node@v4.0.2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: |
        npm ci
        npm run release

    - name: Upload uberjar artifact
      uses: actions/upload-artifact@v4
      with:
        name: built-web
        path: release/public
        retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: [run_tests, build_web]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download uberjar artifact
      uses: actions/download-artifact@v4
      with:
        name: built-web
        path: release/public

    - name: Debug Artifact
    - run: |
        ls release/public

    - uses: superfly/flyctl-actions/setup-flyctl@master
      # --ha=false because by default fly.io spins two machines for high availability
    - run: flyctl deploy --remote-only --ha=false
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
