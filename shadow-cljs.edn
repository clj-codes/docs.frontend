{:deps   {:aliases [:dev]}

 :dev-http {5000 ["resources/public"]
            5002 ["resources/tests"]}

 :jvm-opts ["-Xss4M"]

 :builds {:app {:target           :browser
                :devtools         {:preloads [codes.clj.docs.frontend.dev.refresh]
                                   :reload-strategy :full}
                :output-dir       "resources/public/js"
                :asset-path       "/js"
                :dev              {:modules {:core {:init-fn codes.clj.docs.frontend.dev.core/init}}}
                :release          {:modules {:core {:init-fn codes.clj.docs.frontend.core/init}}}
                :compiler-options {:install-deps true}
                :js-options       {:js-provider :external
                                   :external-index "resources/public/js/lib.js"
                                   :external-index-format :esm}
                :build-hooks      [(codes.clj.docs.frontend.dev.shadow.hooks/esbuild
                                    "resources/public/js/lib.js"
                                    "resources/public/js/lib.bundle.js")
                                   (codes.clj.docs.frontend.dev.shadow.hooks/hashed-files
                                    ["resources/public/css/app.css"
                                     "resources/public/js/core.js"
                                     "resources/public/js/lib.bundle.js"])
                                   (codes.clj.docs.frontend.dev.shadow.hooks/replace-hashed-files
                                    "resources/index.src.html"
                                    "resources/public/index.html")]}

          :tests {:target    :browser-test
                  :test-dir  "resources/tests"
                  :ns-regexp "-test$"}

          :ci-tests {:target           :karma
                     :output-to        "resources/tests/ci.js"
                     :ns-regexp        "-test$"
                     :compiler-options {:static-fns false}}

          :node-tests {:target    :node-test
                       :compiler-options {:reader-features #{:node}}
                       :main      codes.clj.docs.frontend.test.node/main
                       :output-to "resources/tests/node.js"
                       :js-options {:resolve {"react-syntax-highlighter/dist/esm/languages/prism/clojure" {:target :npm
                                                                                                           :require "react-syntax-highlighter/dist/cjs/languages/prism/clojure"}
                                              "react-syntax-highlighter/dist/esm/prism-light.js" {:target :npm
                                                                                                  :require "react-syntax-highlighter/dist/cjs/prism-light.js"}
                                              "react-syntax-highlighter/dist/esm/styles/prism" {:target :npm
                                                                                                :require "react-syntax-highlighter/dist/cjs/styles/prism"}
                                              "react-markdown" {:target :file
                                                                :file   "test/mocks/react-markdown.js"}
                                              "remark-gfm" {:target :file
                                                            :file   "test/mocks/remark-gfm.js"}}}}}}
